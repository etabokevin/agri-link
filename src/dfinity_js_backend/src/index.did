service: () -> {
    accept_bid: (text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    addProduct: (record {name:text; description:text; stock:nat64; category:variant {Poultry; Grains; Vegetables; Other; Fruits}; price:float64}) -> (variant {Ok:record {id:text; status:text; buyerAddress:opt text; reviews:vec text; disputeStatus:bool; name:text; description:text; escrowBalance:float64; stock:nat64; category:variant {Poultry; Grains; Vegetables; Other; Fruits}; sellerId:text; rating:float64; price:float64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    addReview: (record {productId:text; comment:text; rating:float64}) -> (variant {Ok:record {userId:text; createdAt:text; productId:text; comment:text; rating:float64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    add_to_escrow: (text, nat64) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    checkout: (vec record {productId:text; quantity:nat64; price:float64}) -> (variant {Ok:record {id:text; status:text; createdAt:text; totalAmount:float64; buyerId:text; products:vec record {productId:text; quantity:nat64; price:float64}}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    dispute_product: (text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    mark_product_sold: (text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    product_bid: (text, text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    rate_product: (text, float64) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    registerUser: (record {name:text; role:variant {Consumer:text; Seller:text}; email:text}) -> (variant {Ok:record {id:text; owner:principal; name:text; joinedAt:text; role:variant {Consumer:text; Seller:text}; email:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    release_payment: (text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    resolve_dispute: (text, bool) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    update_product_category: (text, variant {Poultry; Grains; Vegetables; Other; Fruits}) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    update_product_description: (text, text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    update_product_price: (text, float64) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    update_product_status: (text, text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    viewOrders: () -> (variant {Ok:vec record {id:text; status:text; createdAt:text; totalAmount:float64; buyerId:text; products:vec record {productId:text; quantity:nat64; price:float64}}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    viewProductReviews: (text) -> (variant {Ok:vec record {userId:text; createdAt:text; productId:text; comment:text; rating:float64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    viewProducts: () -> (variant {Ok:vec record {id:text; status:text; buyerAddress:opt text; reviews:vec text; disputeStatus:bool; name:text; description:text; escrowBalance:float64; stock:nat64; category:variant {Poultry; Grains; Vegetables; Other; Fruits}; sellerId:text; rating:float64; price:float64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    withdraw_from_escrow: (text, text) -> (variant {Ok:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
}
